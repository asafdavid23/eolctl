name: Draft New Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
    contents: write 

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Specify the Go version you are using

      - name: Build
        run: |
          mkdir -p output
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o output/eolctl-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: eolctl-${{ matrix.goos }}-${{ matrix.goarch }}
          path: output/

  create_tags:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Craete New Branch
        run: |
          BRANCH_NAME="update-version-${{ github.ref }}"
          git switch -c $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
  
      - name: Set version in Go file
        run: |
          sed -i "s/^var version = .*/var version = \"$TAG\"/" cmd/root.go
  
      - name: Commit changes
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"
          git add cmd/root.go
          git commit -m "Update version to $TAG"
  
  
      - name: Push changes
        run: git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          title: "Update version to $TAG"
          body: "This PR updates the version to the latest tag: $TAG"
          base: main
          branch: $BRANCH_NAME
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto Merge PR
        run: gh pr merge ${{ steps.create_pr.outputs.pull-request-url }}" --auto

      - name: Create Git tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  release:
    runs-on: ubuntu-latest
    needs: create_tags

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
            name: eolctl-${{ matrix.goos }}-${{ matrix.goarch }}
            path: artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.version }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
